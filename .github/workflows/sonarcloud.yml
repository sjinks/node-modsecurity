name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    permissions:
      contents: read
    steps:
      - name: Install libmodsecurity
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libmodsecurity-dev

      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Set up Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0

      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} npm run build
        env:
          CXXFLAGS: -Og --coverage -fprofile-abs-path -std=c++14
          LDFLAGS: --coverage

      - name: Run tests
        run: npm test

      - name: Process coverage report
        run: |
          mkdir coverage
          cd coverage
          find .. -name '*.o' | xargs gcov --preserve-paths

      - name: Run sonar-scanner
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json" -Dsonar.cfamily.gcov.reportsPath=coverage
