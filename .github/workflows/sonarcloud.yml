name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-test:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: /tmp/build_wrapper_output_directory
    steps:
      - name: Install libmodsecurity
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libmodsecurity-dev

      - name: Check out the code
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          fetch-depth: 0

      - name: Set up Node.js environment
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # v3.7.0
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Install SonarCloud Scan for C and C++
        uses: SonarSource/sonarcloud-github-c-cpp@8d08b4c506dc7a0601ad08b06f73fc9718cea84e # v1.3.2

      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} npm run build
        env:
          CXXFLAGS: -Og --coverage -fprofile-abs-path -std=c++14
          LDFLAGS: --coverage

      - name: Run tests
        run: npm test

      - name: Process coverage report
        run: |
          mkdir coverage
          cd coverage
          find .. -name '*.o' | xargs gcov --preserve-paths

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" --define sonar.cfamily.gcov.reportsPath=coverage
